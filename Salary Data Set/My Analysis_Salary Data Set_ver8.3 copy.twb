<?xml version='1.0' encoding='utf-8' ?>

<!-- build 8300.15.0219.2230                                -->
<workbook source-platform='mac' version=‘10.0’ xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.2'>
      <aliases enabled='yes' />
      <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='150'>
        <calculation class='tableau' formula='150' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (price_parity)' inline='true' name='excel-direct.0p55v5q0qgq318113b24s0x3slic' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\George Su\Box Sync\Business Analysis\Data Visualization and Communication with Tableau\Salary Data Set\price_parity.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B52:no:A1:B52:0' header='yes' outcome='6'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='Price Parity' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price Parity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price Parity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Price Parity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B52:no:A1:B52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.312914' measure-ordering='alphabetic' measure-percentage='0.399007' parameter-percentage='0.288079' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (salary_data_states_corrected)' inline='true' name='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\George Su\Box Sync\Business Analysis\Data Visualization and Communication with Tableau\Salary Data Set\salary_data_states_corrected.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA10001:no:A1:AA2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='CASE_NUMBER' ordinal='0' />
            <column datatype='string' name='CASE_STATUS' ordinal='1' />
            <column datatype='datetime' name='CASE_RECEIVED_DATE' ordinal='2' />
            <column datatype='datetime' name='DECISION_DATE' ordinal='3' />
            <column datatype='string' name='EMPLOYER_NAME' ordinal='4' />
            <column datatype='real' name='PREVAILING_WAGE_SUBMITTED' ordinal='5' />
            <column datatype='string' name='PREVAILING_WAGE_SUBMITTED_UNIT' ordinal='6' />
            <column datatype='real' name='PAID_WAGE_SUBMITTED' ordinal='7' />
            <column datatype='string' name='PAID_WAGE_SUBMITTED_UNIT' ordinal='8' />
            <column datatype='string' name='JOB_TITLE' ordinal='9' />
            <column datatype='string' name='WORK_CITY' ordinal='10' />
            <column datatype='string' name='EDUCATION_LEVEL_REQUIRED' ordinal='11' />
            <column datatype='string' name='COLLEGE_MAJOR_REQUIRED' ordinal='12' />
            <column datatype='string' name='EXPERIENCE_REQUIRED_Y_N' ordinal='13' />
            <column datatype='string' name='EXPERIENCE_REQUIRED_NUM_MONTHS' ordinal='14' />
            <column datatype='string' name='COUNTRY_OF_CITIZENSHIP' ordinal='15' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_CODE' ordinal='16' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_TITLE' ordinal='17' />
            <column datatype='string' name='WORK_STATE' ordinal='18' />
            <column datatype='string' name='WORK_STATE_ABBREVIATION' ordinal='19' />
            <column datatype='string' name='WORK_POSTAL_CODE' ordinal='20' />
            <column datatype='string' name='FULL_TIME_POSITION_Y_N' ordinal='21' />
            <column datatype='string' name='VISA_CLASS' ordinal='22' />
            <column datatype='real' name='PREVAILING_WAGE_PER_YEAR' ordinal='23' />
            <column datatype='real' name='PAID_WAGE_PER_YEAR' ordinal='24' />
            <column datatype='string' name='JOB_TITLE_SUBGROUP' ordinal='25' />
            <column datatype='integer' name='order' ordinal='26' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CASE_NUMBER</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE_NUMBER]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_NUMBER</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_STATUS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE_STATUS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_STATUS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_RECEIVED_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[CASE_RECEIVED_DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_RECEIVED_DATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DECISION_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DECISION_DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DECISION_DATE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMPLOYER_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EMPLOYER_NAME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EMPLOYER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SUBMITTED</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PREVAILING_WAGE_SUBMITTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SUBMITTED</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SUBMITTED_UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SUBMITTED_UNIT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SUBMITTED_UNIT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_SUBMITTED</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PAID_WAGE_SUBMITTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_SUBMITTED</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_SUBMITTED_UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PAID_WAGE_SUBMITTED_UNIT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_SUBMITTED_UNIT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_TITLE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_TITLE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JOB_TITLE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_CITY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_CITY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EDUCATION_LEVEL_REQUIRED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EDUCATION_LEVEL_REQUIRED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EDUCATION_LEVEL_REQUIRED</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COLLEGE_MAJOR_REQUIRED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COLLEGE_MAJOR_REQUIRED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COLLEGE_MAJOR_REQUIRED</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXPERIENCE_REQUIRED_Y_N</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EXPERIENCE_REQUIRED_Y_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EXPERIENCE_REQUIRED_Y_N</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXPERIENCE_REQUIRED_NUM_MONTHS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EXPERIENCE_REQUIRED_NUM_MONTHS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EXPERIENCE_REQUIRED_NUM_MONTHS</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_OF_CITIZENSHIP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY_OF_CITIZENSHIP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COUNTRY_OF_CITIZENSHIP</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SOC_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SOC_CODE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SOC_CODE</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SOC_TITLE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SOC_TITLE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SOC_TITLE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_STATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_STATE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_STATE_ABBREVIATION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_STATE_ABBREVIATION]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_STATE_ABBREVIATION</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_POSTAL_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_POSTAL_CODE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_POSTAL_CODE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FULL_TIME_POSITION_Y_N</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FULL_TIME_POSITION_Y_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>FULL_TIME_POSITION_Y_N</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VISA_CLASS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[VISA_CLASS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>VISA_CLASS</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_PER_YEAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PREVAILING_WAGE_PER_YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_PER_YEAR</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_PER_YEAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PAID_WAGE_PER_YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_PER_YEAR</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_TITLE_SUBGROUP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_TITLE_SUBGROUP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JOB_TITLE_SUBGROUP</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>order</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AA10001:no:A1:AA2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case Number' datatype='string' name='[CASE_NUMBER]' role='dimension' type='nominal' />
      <column caption='Case Received Date' datatype='datetime' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
      <column caption='Case Status' datatype='string' name='[CASE_STATUS]' role='dimension' type='nominal' />
      <column caption='College Major Required' datatype='string' name='[COLLEGE_MAJOR_REQUIRED]' role='dimension' type='nominal' />
      <column caption='Country Of Citizenship' datatype='string' name='[COUNTRY_OF_CITIZENSHIP]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='States I am Interested in' datatype='string' name='[Calculation_1072982632249483267]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [WORK_STATE]&#13;&#10;WHEN &apos;California&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Texas&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;New York&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;New Jersey&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;North Carolina&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Massachusetts&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Maine&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Washington&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;ELSE &apos;Don&apos;&apos;t View&apos;&#13;&#10;END' />
      </column>
      <column caption='Adjusted Salary' datatype='real' name='[Calculation_1072982632252329989]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([excel-direct.0p55v5q0qgq318113b24s0x3slic].[Price Parity]))*100' />
      </column>
      <column caption='In Top X?' datatype='boolean' name='[Calculation_1072982632365764615]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK([Calculation_1072982632252329989]) &lt;=[Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Case Number (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[CASE_NUMBER]' default='&quot;I-203-15085-942228&quot;'>
          <bin value='&quot;I-200-13077-839340&quot;'>
            <value>&quot;I-200-13077-839340&quot;</value>
            <value>&quot;I-200-13081-043757&quot;</value>
            <value>&quot;I-200-13081-136705&quot;</value>
            <value>&quot;I-200-13087-022976&quot;</value>
            <value>&quot;I-203-14021-228428&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;I-203-15085-942228&quot;' value='Other' />
        </aliases>
      </column>
      <column caption='Decision Date' datatype='datetime' name='[DECISION_DATE]' role='dimension' type='ordinal' />
      <column caption='Education Level Required' datatype='string' name='[EDUCATION_LEVEL_REQUIRED]' role='dimension' type='nominal' />
      <column caption='Employer Name' datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
      <column caption='Experience Required Num Months' datatype='string' name='[EXPERIENCE_REQUIRED_NUM_MONTHS]' role='dimension' type='nominal' />
      <column caption='Experience Required Y N' datatype='string' name='[EXPERIENCE_REQUIRED_Y_N]' role='dimension' type='nominal' />
      <column caption='Full Time Position Y N' datatype='string' name='[FULL_TIME_POSITION_Y_N]' role='dimension' type='nominal' />
      <column caption='Job Title' datatype='string' name='[JOB_TITLE]' role='dimension' type='nominal' />
      <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
      <column caption='Paid Wage Submitted' datatype='real' name='[PAID_WAGE_SUBMITTED]' role='measure' type='quantitative' />
      <column caption='Paid Wage Submitted Unit' datatype='string' name='[PAID_WAGE_SUBMITTED_UNIT]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Per Year' datatype='real' name='[PREVAILING_WAGE_PER_YEAR]' role='measure' type='quantitative' />
      <column caption='Prevailing Wage Soc Code' datatype='string' name='[PREVAILING_WAGE_SOC_CODE]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Soc Title' datatype='string' name='[PREVAILING_WAGE_SOC_TITLE]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Submitted' datatype='real' name='[PREVAILING_WAGE_SUBMITTED]' role='dimension' type='ordinal' />
      <column caption='Prevailing Wage Submitted Unit' datatype='string' name='[PREVAILING_WAGE_SUBMITTED_UNIT]' role='dimension' type='nominal' />
      <column caption='Visa Class' datatype='string' name='[VISA_CLASS]' role='dimension' type='nominal' />
      <column caption='Work City' datatype='string' name='[WORK_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Work Postal Code' datatype='string' name='[WORK_POSTAL_CODE]' role='dimension' type='nominal' />
      <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Work State Abbreviation' datatype='string' name='[WORK_STATE_ABBREVIATION]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Work State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[WORK_STATE]' default='&quot;Wyoming&quot;'>
          <bin value='&quot;AL&quot;'>
            <value>&quot;AL&quot;</value>
            <value>&quot;ALABAMA&quot;</value>
          </bin>
          <bin value='&quot;CA&quot;'>
            <value>&quot;CA&quot;</value>
            <value>&quot;CALIFORNIA&quot;</value>
          </bin>
          <bin value='&quot;CO&quot;'>
            <value>&quot;CO&quot;</value>
            <value>&quot;COLORADO&quot;</value>
          </bin>
          <bin value='&quot;MA&quot;'>
            <value>&quot;MA&quot;</value>
            <value>&quot;MASSACHUSETTS&quot;</value>
          </bin>
          <bin value='&quot;MAINE&quot;'>
            <value>&quot;MAINE&quot;</value>
            <value>&quot;ME&quot;</value>
          </bin>
          <bin value='&quot;NC&quot;'>
            <value>&quot;NC&quot;</value>
            <value>&quot;NORTH CAROLINA&quot;</value>
          </bin>
          <bin value='&quot;NEW HAMPSHIRE&quot;'>
            <value>&quot;NEW HAMPSHIRE&quot;</value>
            <value>&quot;NH&quot;</value>
          </bin>
          <bin value='&quot;New Jersey&quot;'>
            <value>&quot;New Jersey&quot;</value>
          </bin>
          <bin value='&quot;NEW YORK&quot;'>
            <value>&quot;NEW YORK&quot;</value>
            <value>&quot;NY&quot;</value>
          </bin>
          <bin value='&quot;TEXAS&quot;'>
            <value>&quot;TEXAS&quot;</value>
            <value>&quot;TX&quot;</value>
          </bin>
          <bin value='&quot;WA&quot;'>
            <value>&quot;WA&quot;</value>
            <value>&quot;WASHINGTON&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;AL&quot;' value='Alabama' />
          <alias key='&quot;CA&quot;' value='California' />
          <alias key='&quot;CO&quot;' value='Colorado' />
          <alias key='&quot;MA&quot;' value='Massachusetts' />
          <alias key='&quot;MAINE&quot;' value='Maine' />
          <alias key='&quot;NC&quot;' value='North Carolina' />
          <alias key='&quot;NEW HAMPSHIRE&quot;' value='New Hampshire' />
          <alias key='&quot;NEW YORK&quot;' value='New York' />
          <alias key='&quot;TEXAS&quot;' value='Texas' />
          <alias key='&quot;WA&quot;' value='Washington' />
          <alias key='&quot;Wyoming&quot;' value='Other' />
        </aliases>
      </column>
      <column caption='Order' datatype='integer' name='[order]' role='measure' type='quantitative' />
      <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
      <group caption='Action (Job Title Subgroup,Work State (group))' hidden='true' name='[Action (Job Title Subgroup,Work State (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[JOB_TITLE_SUBGROUP]' />
          <groupfilter function='level-members' level='[Work State (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Job Title Subgroup,Work State)' hidden='true' name='[Action (Job Title Subgroup,Work State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[JOB_TITLE_SUBGROUP]' />
          <groupfilter function='level-members' level='[WORK_STATE]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.6816' measure-ordering='alphabetic' measure-percentage='0.2864' parameter-percentage='0.032' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:JOB_TITLE_SUBGROUP:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;data scientist&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;business analyst&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;teacher&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;assistant professor&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;attorney&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;software engineer&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;management consultant&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;data analyst&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='150'>
          <calculation class='tableau' formula='150' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='excel-direct.0p55v5q0qgq318113b24s0x3slic'>
        <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='excel-direct.0p55v5q0qgq318113b24s0x3slic'>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.0u42ps00stiela1dkjjfn0i6u20f'>
      <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' target='excel-direct.0p55v5q0qgq318113b24s0x3slic'>
      <column-mapping>
        <map key='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]' value='[excel-direct.0p55v5q0qgq318113b24s0x3slic].[none:State:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Best Fit Lines Over Time' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Job Title Subgroup' />
        <param name='target' value='Best Fit Lines Over Time' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Wage per State per Subgroup' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Job Title Subgroup' />
        <param name='target' value='Wage per State per Subgroup' />
      </command>
    </action>
    <action caption='Filter State' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Data Jobs for Preferred State' type='sheet' worksheet='Wage per State per Subgroup' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Wage per State per Subgroup' />
        <param name='on-empty' value='none' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Data Jobs for Preferred State' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Best Fit Lines Over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0u42ps00stiela1dkjjfn0i6u20f'>
            <column caption='Case Received Date' datatype='datetime' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Max' name='[max:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Min' name='[min:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CASE_RECEIVED_DATE]' derivation='None' name='[none:CASE_RECEIVED_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[CASE_RECEIVED_DATE]' derivation='Year-Trunc' name='[tyr:CASE_RECEIVED_DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:CASE_RECEIVED_DATE:qk]' included-values='in-range'>
            <min>#2009-01-10 00:00:00#</min>
            <max>#2015-06-29 00:00:00#</max>
          </filter>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;business analyst&quot;' />
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;data analyst&quot;' />
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;data scientist&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;data scientist&quot;</bucket>
              <bucket>&quot;data analyst&quot;</bucket>
              <bucket>&quot;business analyst&quot;</bucket>
              <bucket>&quot;software engineer&quot;</bucket>
              <bucket>&quot;assistant professor&quot;</bucket>
              <bucket>&quot;attorney&quot;</bucket>
              <bucket>&quot;management consultant&quot;</bucket>
              <bucket>&quot;teacher&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:CASE_RECEIVED_DATE:qk]</column>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' scope='rows' value='Med Paid Wage Per Year' />
            <format attr='subtitle' class='0' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
          <pane id='1' y-axis-name='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
          <pane id='2' y-axis-name='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[max:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
          <pane id='3' y-axis-name='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[min:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
        </panes>
        <rows>([excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk] + ([excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[max:PAID_WAGE_PER_YEAR:qk] + [excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[min:PAID_WAGE_PER_YEAR:qk]))</rows>
        <cols>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[tyr:CASE_RECEIVED_DATE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Box Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0u42ps00stiela1dkjjfn0i6u20f'>
            <column caption='Case Received Date' datatype='datetime' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[CASE_RECEIVED_DATE]' derivation='Year' name='[yr:CASE_RECEIVED_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;data analyst&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' field-type='quantitative' max='300000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[yr:CASE_RECEIVED_DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Bubble Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0u42ps00stiela1dkjjfn0i6u20f'>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' />
              <size column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' />
              <text column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Checking for outliers'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0u42ps00stiela1dkjjfn0i6u20f'>
            <column caption='Case Number' datatype='string' name='[CASE_NUMBER]' role='dimension' type='nominal' />
            <column datatype='string' name='[Case Number (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[CASE_NUMBER]' default='&quot;I-203-15085-942228&quot;'>
                <bin value='&quot;I-200-13077-839340&quot;'>
                  <value>&quot;I-200-13077-839340&quot;</value>
                  <value>&quot;I-200-13081-043757&quot;</value>
                  <value>&quot;I-200-13081-136705&quot;</value>
                  <value>&quot;I-200-13087-022976&quot;</value>
                  <value>&quot;I-203-14021-228428&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;I-203-15085-942228&quot;' value='Other' />
              </aliases>
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[Case Number (group)]'>
            <groupfilter function='member' level='[Case Number (group)]' member='&quot;I-203-15085-942228&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' direction='DESC' using='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' />
          <slices>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[Case Number (group)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' value='10' />
            <format attr='font-weight' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' value='normal' />
            <format attr='font-size' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[Case Number (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.20790055394172668' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#d8504c' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Median Wage Per Subgroup'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' />
            <datasource caption='Sheet1 (price_parity)' name='excel-direct.0p55v5q0qgq318113b24s0x3slic' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0p55v5q0qgq318113b24s0x3slic'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.0u42ps00stiela1dkjjfn0i6u20f'>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' direction='DESC' using='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' value='10' />
            <format attr='font-weight' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' value='normal' />
            <format attr='font-size' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6701657772064209' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#d8504c' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.0p55v5q0qgq318113b24s0x3slic].[State]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Top Companies for Data Job'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' />
            <datasource name='Parameters' />
            <datasource caption='Sheet1 (price_parity)' name='excel-direct.0p55v5q0qgq318113b24s0x3slic' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='150'>
              <calculation class='tableau' formula='150' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.0p55v5q0qgq318113b24s0x3slic'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.0u42ps00stiela1dkjjfn0i6u20f'>
            <column caption='Adjusted Salary' datatype='real' name='[Calculation_1072982632252329989]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([excel-direct.0p55v5q0qgq318113b24s0x3slic].[Price Parity]))*100' />
            </column>
            <column caption='In Top X?' datatype='boolean' name='[Calculation_1072982632365764615]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_1072982632252329989]) &lt;=[Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Employer Name' datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Work State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[WORK_STATE]' default='&quot;Wyoming&quot;'>
                <bin value='&quot;AL&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;ALABAMA&quot;</value>
                </bin>
                <bin value='&quot;CA&quot;'>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;CALIFORNIA&quot;</value>
                </bin>
                <bin value='&quot;CO&quot;'>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;COLORADO&quot;</value>
                </bin>
                <bin value='&quot;MA&quot;'>
                  <value>&quot;MA&quot;</value>
                  <value>&quot;MASSACHUSETTS&quot;</value>
                </bin>
                <bin value='&quot;MAINE&quot;'>
                  <value>&quot;MAINE&quot;</value>
                  <value>&quot;ME&quot;</value>
                </bin>
                <bin value='&quot;NC&quot;'>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;NORTH CAROLINA&quot;</value>
                </bin>
                <bin value='&quot;NEW HAMPSHIRE&quot;'>
                  <value>&quot;NEW HAMPSHIRE&quot;</value>
                  <value>&quot;NH&quot;</value>
                </bin>
                <bin value='&quot;New Jersey&quot;'>
                  <value>&quot;New Jersey&quot;</value>
                </bin>
                <bin value='&quot;NEW YORK&quot;'>
                  <value>&quot;NEW YORK&quot;</value>
                  <value>&quot;NY&quot;</value>
                </bin>
                <bin value='&quot;TEXAS&quot;'>
                  <value>&quot;TEXAS&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
                <bin value='&quot;WA&quot;'>
                  <value>&quot;WA&quot;</value>
                  <value>&quot;WASHINGTON&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MAINE&quot;' value='Maine' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;NEW HAMPSHIRE&quot;' value='New Hampshire' />
                <alias key='&quot;NEW YORK&quot;' value='New York' />
                <alias key='&quot;TEXAS&quot;' value='Texas' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;Wyoming&quot;' value='Other' />
              </aliases>
            </column>
            <column-instance column='[EMPLOYER_NAME]' derivation='None' name='[none:EMPLOYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1072982632252329989]' derivation='User' name='[rank:usr:Calculation_1072982632252329989:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[EMPLOYER_NAME]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1072982632252329989]' derivation='User' name='[usr:Calculation_1072982632252329989:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1072982632365764615]' derivation='User' name='[usr:Calculation_1072982632365764615:nk:4]' pivot='key' type='nominal'>
              <table-calc ordering-field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[EMPLOYER_NAME]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[Action (Job Title Subgroup,Work State (group))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[JOB_TITLE_SUBGROUP]' />
              <groupfilter function='level-members' level='[Work State (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[Action (Job Title Subgroup,Work State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[JOB_TITLE_SUBGROUP]' member='&quot;business analyst&quot;' />
              <groupfilter function='member' level='[WORK_STATE]' member='&quot;California&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='level-members' level='[none:JOB_TITLE_SUBGROUP:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632365764615:nk:4]'>
            <groupfilter function='member' level='[usr:Calculation_1072982632365764615:nk:4]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</column>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632365764615:nk:4]</column>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[Action (Job Title Subgroup,Work State (group))]</column>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[Action (Job Title Subgroup,Work State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk] / ([excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk] / ([excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[rank:usr:Calculation_1072982632252329989:ok] / [excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:EMPLOYER_NAME:nk])))</rows>
        <cols>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632252329989:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top States per Data Job (adj)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' />
            <datasource name='Parameters' />
            <datasource caption='Sheet1 (price_parity)' name='excel-direct.0p55v5q0qgq318113b24s0x3slic' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='150'>
              <calculation class='tableau' formula='150' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.0p55v5q0qgq318113b24s0x3slic'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.0u42ps00stiela1dkjjfn0i6u20f'>
            <column caption='Adjusted Salary' datatype='real' name='[Calculation_1072982632252329989]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([excel-direct.0p55v5q0qgq318113b24s0x3slic].[Price Parity]))*100' />
            </column>
            <column caption='In Top X?' datatype='boolean' name='[Calculation_1072982632365764615]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_1072982632252329989]) &lt;=[Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1072982632252329989]' derivation='User' name='[rank:usr:Calculation_1072982632252329989:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[WORK_STATE]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_1072982632252329989]' derivation='User' name='[usr:Calculation_1072982632252329989:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1072982632365764615]' derivation='User' name='[usr:Calculation_1072982632365764615:nk:2]' pivot='key' type='nominal'>
              <table-calc ordering-field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[WORK_STATE]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;business analyst&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;data scientist&quot;</bucket>
              <bucket>&quot;data analyst&quot;</bucket>
              <bucket>&quot;business analyst&quot;</bucket>
              <bucket>&quot;management consultant&quot;</bucket>
              <bucket>&quot;software engineer&quot;</bucket>
              <bucket>&quot;assistant professor&quot;</bucket>
              <bucket>&quot;attorney&quot;</bucket>
              <bucket>&quot;teacher&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632365764615:nk:2]'>
            <groupfilter function='member' level='[usr:Calculation_1072982632365764615:nk:2]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</column>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632365764615:nk:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632252329989:qk]</rows>
        <cols>([excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk] / ([excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[rank:usr:Calculation_1072982632252329989:ok:1] / [excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='VISA Class does Not Have Effect on Subgroups'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0u42ps00stiela1dkjjfn0i6u20f'>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Visa Class' datatype='string' name='[VISA_CLASS]' role='dimension' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[VISA_CLASS]' derivation='None' name='[none:VISA_CLASS:nk]' pivot='key' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Stdev' name='[std:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' included-values='in-range'>
            <min>30800.0</min>
            <max>177927.0</max>
          </filter>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter from='&quot;business analyst&quot;' function='range' level='[none:JOB_TITLE_SUBGROUP:nk]' to='&quot;software engineer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;data scientist&quot;</bucket>
              <bucket>&quot;data analyst&quot;</bucket>
              <bucket>&quot;business analyst&quot;</bucket>
              <bucket>&quot;attorney&quot;</bucket>
              <bucket>&quot;management consultant&quot;</bucket>
              <bucket>&quot;software engineer&quot;</bucket>
              <bucket>&quot;assistant professor&quot;</bucket>
              <bucket>&quot;teacher&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]</column>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' value='12' />
            <format attr='font-size' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[std:PAID_WAGE_PER_YEAR:qk]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]' value='10' />
            <format attr='font-weight' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' value='normal' />
            <format attr='font-size' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' value='12' />
            <format attr='font-size' field='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[std:PAID_WAGE_PER_YEAR:qk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[sum:Number of Records:qk]' />
              <lod column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[std:PAID_WAGE_PER_YEAR:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6701657772064209' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#404b73' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>([excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk] / [excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:VISA_CLASS:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Wage per State per Subgroup'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0u42ps00stiela1dkjjfn0i6u20f'>
            <column caption='States I am Interested in' datatype='string' name='[Calculation_1072982632249483267]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [WORK_STATE]&#13;&#10;WHEN &apos;California&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Texas&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;New York&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;New Jersey&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;North Carolina&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Massachusetts&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Maine&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Washington&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;ELSE &apos;Don&apos;&apos;t View&apos;&#13;&#10;END' />
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1072982632249483267]' derivation='None' name='[none:Calculation_1072982632249483267:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:Calculation_1072982632249483267:nk]'>
            <groupfilter function='member' level='[none:Calculation_1072982632249483267:nk]' member='&quot;View&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;business analyst&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;data scientist&quot;</bucket>
              <bucket>&quot;data analyst&quot;</bucket>
              <bucket>&quot;business analyst&quot;</bucket>
              <bucket>&quot;software engineer&quot;</bucket>
              <bucket>&quot;attorney&quot;</bucket>
              <bucket>&quot;assistant professor&quot;</bucket>
              <bucket>&quot;management consultant&quot;</bucket>
              <bucket>&quot;teacher&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:WORK_STATE:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:WORK_STATE:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:WORK_STATE:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:WORK_STATE:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:WORK_STATE:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:WORK_STATE:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:WORK_STATE:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:WORK_STATE:nk]' member='&quot;Washington&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]</column>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:Calculation_1072982632249483267:nk]</column>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>([excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk] / [excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Wage per State per Subgroup (adj)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' />
            <datasource caption='Sheet1 (price_parity)' name='excel-direct.0p55v5q0qgq318113b24s0x3slic' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0p55v5q0qgq318113b24s0x3slic'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.0u42ps00stiela1dkjjfn0i6u20f'>
            <column caption='States I am Interested in' datatype='string' name='[Calculation_1072982632249483267]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [WORK_STATE]&#13;&#10;WHEN &apos;California&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Texas&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;New York&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;New Jersey&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;North Carolina&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Massachusetts&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Maine&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Washington&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;ELSE &apos;Don&apos;&apos;t View&apos;&#13;&#10;END' />
            </column>
            <column caption='Adjusted Salary' datatype='real' name='[Calculation_1072982632252329989]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([excel-direct.0p55v5q0qgq318113b24s0x3slic].[Price Parity]))*100' />
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1072982632249483267]' derivation='None' name='[none:Calculation_1072982632249483267:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1072982632252329989]' derivation='User' name='[usr:Calculation_1072982632252329989:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:Calculation_1072982632249483267:nk]'>
            <groupfilter function='member' level='[none:Calculation_1072982632249483267:nk]' member='&quot;View&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;data scientist&quot;</bucket>
              <bucket>&quot;data analyst&quot;</bucket>
              <bucket>&quot;business analyst&quot;</bucket>
              <bucket>&quot;assistant professor&quot;</bucket>
              <bucket>&quot;attorney&quot;</bucket>
              <bucket>&quot;management consultant&quot;</bucket>
              <bucket>&quot;software engineer&quot;</bucket>
              <bucket>&quot;teacher&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:Calculation_1072982632249483267:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632252329989:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk] + [excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632252329989:qk])</rows>
        <cols>([excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk] / [excel-direct.0p55v5q0qgq318113b24s0x3slic].[none:State:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Data Jobs for Preferred State'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Sheet1 (salary_data_states_corrected)' name='excel-direct.0u42ps00stiela1dkjjfn0i6u20f' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.0u42ps00stiela1dkjjfn0i6u20f'>
        <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
        <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='string' name='[Work State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[WORK_STATE]' default='&quot;Wyoming&quot;'>
            <bin value='&quot;AL&quot;'>
              <value>&quot;AL&quot;</value>
              <value>&quot;ALABAMA&quot;</value>
            </bin>
            <bin value='&quot;CA&quot;'>
              <value>&quot;CA&quot;</value>
              <value>&quot;CALIFORNIA&quot;</value>
            </bin>
            <bin value='&quot;CO&quot;'>
              <value>&quot;CO&quot;</value>
              <value>&quot;COLORADO&quot;</value>
            </bin>
            <bin value='&quot;MA&quot;'>
              <value>&quot;MA&quot;</value>
              <value>&quot;MASSACHUSETTS&quot;</value>
            </bin>
            <bin value='&quot;MAINE&quot;'>
              <value>&quot;MAINE&quot;</value>
              <value>&quot;ME&quot;</value>
            </bin>
            <bin value='&quot;NC&quot;'>
              <value>&quot;NC&quot;</value>
              <value>&quot;NORTH CAROLINA&quot;</value>
            </bin>
            <bin value='&quot;NEW HAMPSHIRE&quot;'>
              <value>&quot;NEW HAMPSHIRE&quot;</value>
              <value>&quot;NH&quot;</value>
            </bin>
            <bin value='&quot;New Jersey&quot;'>
              <value>&quot;New Jersey&quot;</value>
            </bin>
            <bin value='&quot;NEW YORK&quot;'>
              <value>&quot;NEW YORK&quot;</value>
              <value>&quot;NY&quot;</value>
            </bin>
            <bin value='&quot;TEXAS&quot;'>
              <value>&quot;TEXAS&quot;</value>
              <value>&quot;TX&quot;</value>
            </bin>
            <bin value='&quot;WA&quot;'>
              <value>&quot;WA&quot;</value>
              <value>&quot;WASHINGTON&quot;</value>
            </bin>
          </calculation>
          <aliases>
            <alias key='&quot;AL&quot;' value='Alabama' />
            <alias key='&quot;CA&quot;' value='California' />
            <alias key='&quot;CO&quot;' value='Colorado' />
            <alias key='&quot;MA&quot;' value='Massachusetts' />
            <alias key='&quot;MAINE&quot;' value='Maine' />
            <alias key='&quot;NC&quot;' value='North Carolina' />
            <alias key='&quot;NEW HAMPSHIRE&quot;' value='New Hampshire' />
            <alias key='&quot;NEW YORK&quot;' value='New York' />
            <alias key='&quot;TEXAS&quot;' value='Texas' />
            <alias key='&quot;WA&quot;' value='Washington' />
            <alias key='&quot;Wyoming&quot;' value='Other' />
          </aliases>
        </column>
        <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='9' name='Top Companies for Data Job' show-title='true' w='84000' x='0' y='50000' />
              <zone h='50000' id='10' name='Wage per State per Subgroup' show-title='true' w='84000' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='33375' id='11' name='Wage per State per Subgroup' param='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[Work State (group)]' type='filter' w='16000' x='84000' y='0' />
              <zone h='23875' id='12' mode='radiolist' name='Wage per State per Subgroup' param='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' w='16000' x='84000' y='33375' />
              <zone h='6000' id='8' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='84000' y='57250' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Why Analyst? Why Stryker? Here Goes My Answer...</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' hidden='true' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5375' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='13625' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5375' />
            <zone h='80500' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='19000'>
              <flipboard active-id='4' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Visa class has NO effect on business analyst jobs' captured-sheet='VISA Class does Not Have Effect on Subgroups' id='1'>
                    <capturedDeltas>
                      <worksheet name='VISA Class does Not Have Effect on Subgroups'>
                        <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]'>
                          <groupfilter function='level-members' level='[none:JOB_TITLE_SUBGROUP:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <sort class='manual' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' direction='ASC'>
                          <dictionary>
                            <bucket>&quot;data scientist&quot;</bucket>
                            <bucket>&quot;data analyst&quot;</bucket>
                            <bucket>&quot;business analyst&quot;</bucket>
                            <bucket>&quot;management consultant&quot;</bucket>
                            <bucket>&quot;software engineer&quot;</bucket>
                            <bucket>&quot;attorney&quot;</bucket>
                            <bucket>&quot;assistant professor&quot;</bucket>
                            <bucket>&quot;teacher&quot;</bucket>
                            <bucket>%all%</bucket>
                          </dictionary>
                        </sort>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Salary would likely to increase in the future' captured-sheet='Best Fit Lines Over Time' id='2'>
                    <capturedDeltas>
                      <worksheet name='Best Fit Lines Over Time'>
                        <filter class='categorical' column='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;business analyst&quot;' />
                            <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;data analyst&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Should I relocate or stay in California' captured-sheet='Top States per Data Job (adj)' id='3'>
                    <capturedDeltas>
                      <worksheet name='Top States per Data Job (adj)'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</field>
                                    <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[rank:usr:Calculation_1072982632252329989:ok:1]</field>
                                    <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632252329989:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</field>
                                  <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]</field>
                                  <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632252329989:qk]</field>
                                  <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[rank:usr:Calculation_1072982632252329989:ok:1]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;business analyst&quot;</value>
                                <value>&quot;California&quot;</value>
                                <value>62333.036509349964</value>
                                <value>40</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Why do I choose to be an Analyst at Stryker' captured-sheet='Data Jobs for Preferred State' id='4'>
                    <currentDeltas />
                    <capturedDeltas>
                      <worksheet name='Top Companies for Data Job'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632252329989:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</field>
                                    <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]</field>
                                    <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[rank:usr:Calculation_1072982632252329989:ok]</field>
                                    <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:EMPLOYER_NAME:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:EMPLOYER_NAME:nk]</field>
                                  <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</field>
                                  <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]</field>
                                  <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[sum:Number of Records:qk]</field>
                                  <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632252329989:qk]</field>
                                  <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[rank:usr:Calculation_1072982632252329989:ok]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;STRYKER CORPORATION&quot;</value>
                                <value>&quot;business analyst&quot;</value>
                                <value>&quot;California&quot;</value>
                                <value>1</value>
                                <value>97951.914514692791</value>
                                <value>129</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' name='Median Wage Per Subgroup'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:Calculation_1072982632249483267:nk]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]</field>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='VISA Class does Not Have Effect on Subgroups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc].[none:VISA_CLASS:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Bubble Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Checking for outliers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc (copy)].[Case Number (group)]</field>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc].[none:CASE_NUMBER:nk]</field>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc].[none:PAID_WAGE_PER_YEAR:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Wage per State per Subgroup'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:Calculation_1072982632249483267:nk]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]</field>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc (copy)].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc].[Work State (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Best Fit Lines Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc (copy)].[none:CASE_RECEIVED_DATE:qk]</field>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc (copy)].[yr:CASE_RECEIVED_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Box Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc (copy)].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[excel-direct.1euwbch1eq1a7g1fsx1351b4ljoc (copy)].[yr:CASE_RECEIVED_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Wage per State per Subgroup (adj)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0p55v5q0qgq318113b24s0x3slic].[none:State:nk]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:Calculation_1072982632249483267:nk]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top States per Data Job (adj)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:Calculation_1072982632249483267:nk]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632365764615:nk:2]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632365764615:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Companies for Data Job'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:Calculation_1072982632249483267:nk]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:EMPLOYER_NAME:nk]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632365764615:nk:4]</field>
            <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[usr:Calculation_1072982632365764615:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Data Jobs for Preferred State'>
      <viewpoints>
        <viewpoint name='Top Companies for Data Job' />
        <viewpoint name='Wage per State per Subgroup'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</field>
                      <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[med:PAID_WAGE_PER_YEAR:qk]</field>
                    <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:JOB_TITLE_SUBGROUP:nk]</field>
                    <field>[excel-direct.0u42ps00stiela1dkjjfn0i6u20f].[none:WORK_STATE:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>70000.0</value>
                  <value>&quot;business analyst&quot;</value>
                  <value>&quot;California&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='5' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Median Wage Per Subgroup' width='192'>
      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
      saDKalCRI/4bnwBExr4qeAwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='VISA Class does Not Have Effect on Subgroups' width='192'>
      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
      Hxm0ppHIR0ujAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bubble Chart' width='192'>
      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
      qIG/Q+XOVdQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Checking for outliers' width='192'>
      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
      BaJQduC/AdshiGzbRq+VAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Wage per State per Subgroup' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Best Fit Lines Over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Box Plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Wage per State per Subgroup (adj)' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top States per Data Job (adj)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Companies for Data Job' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Data Jobs for Preferred State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
